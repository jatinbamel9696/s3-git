name: CI-1
on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      AWS_DEFAULT_REGION:
        type: string
        description: "Default AWS region used to build the AMI." 
        required: false 
        default: "us-east-1"
     
      SOURCE_STAGING_BUCKET:
        type: string
        description: "The bucket used to store the AMI backup file." 
        required: false 
        default: "test-ami-jatin"
     
      DESTINATION_STAGING_BUCKET:
        type: string
        description: "The bucket used to store the AMI backup file in China partition." 
        required: false 
        default: "source-bucket-test-jatin"
      DESTINATION_REGION:
        type: string
        description: "Region of the destination staging bucket." 
        required: false 
        default: "us-east-1"
     

env:
  AWS_DEFAULT_REGION: ${{ inputs.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{  secrets.AWS_ACCESS_KEY_ID  }}
  AWS_SECRET_ACCESS_KEY: ${{  secrets.AWS_SECRET_ACCESS_KEY  }}
  AWS_REGION: 'us-east-1'
  AWS_ACCESS_KEY_ID1: ${{  secrets.AWS_ACCESS_KEY_ID1  }}
  AWS_SECRET_ACCESS_KEY1: ${{  secrets.AWS_SECRET_ACCESS_KEY1  }}

jobs:
  backup_and_restore_ami: 
    runs-on: ubuntu-latest
    name: copy-ami-to-another-region
    
    permissions:
      id-token: write 
      contents: read

    timeout-minutes: 90

    steps:
      - name: Download manifest.json 
        id: download manifest
        uses: actions/download-artifact@v3 
        with:
          name: manifest

      - name: Configure AWS credentials 
        id: aws_credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Backup AMI to S3 
        run: |
          echo "Installing jq..."
          sudo apt-get install -y jq
          artifact_ids-$(jq -r ".builds[0].artifact_id" ${{ github.workspace }}/mainfest.json)
          IFS=',' read -r -a artifact_ids_array <<< "$artifact_ids"
          for _id in "${artifact_ids_array[@]}"
            do
              if [[ $_id =~ ${{ inputs.AWS_DEFAULT_REGION }} ]]; then
                ami_string=$_id
                IFS=',' read -r -a ami_string_array <<< $ami_string
                ami_id=${ami_string_array[1]}
                break
              fi
            done
          
